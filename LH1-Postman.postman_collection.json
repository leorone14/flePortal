{
	"info": {
		"_postman_id": "ddb4f592-e790-49c2-af5a-97dd3fd6fa17",
		"name": "LH1-Postman-updated",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AIS flow",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.globals.set(\"accessToken\", responseJson.access_token)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "OneAPI",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{host}}/api/oauth/token",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Providers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/oneapi/v1/providers",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Permission - global permission",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.globals.set(\"permissionId\", responseJson.permissionId)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Digest",
								"value": "{{Digest}}",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{Signature}}",
								"type": "text"
							},
							{
								"key": "Date",
								"value": "{{Date}}",
								"type": "text"
							},
							{
								"key": "TPP-Signature-Certificate",
								"value": "{{EncodedCert}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"BIC\": \"DEMOLULLXX1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/oneapi/v1/users/f5c50d40-0903-4aaa-8a7c-379a274ecdb4/permissions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"users",
								"f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Accounts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "LH-Token-Information",
								"value": "{{permissionId}}",
								"type": "text"
							},
							{
								"key": "LH-USER-Id",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{Signature}}",
								"type": "text"
							},
							{
								"key": "Date",
								"value": "{{Date}}",
								"type": "text"
							},
							{
								"key": "TPP-Signature-Certificate",
								"value": "{{EncodedCert}}",
								"type": "text"
							},
							{
								"key": "LH-BIC-Provider",
								"value": "DEMOLULLXX1",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}/oneapi/v1/accounts",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Permission - detailed permission",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.globals.set(\"permissionId\", responseJson.permissionId)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Digest",
								"type": "text",
								"value": "{{Digest}}"
							},
							{
								"key": "Signature",
								"type": "text",
								"value": "{{Signature}}"
							},
							{
								"key": "Date",
								"type": "text",
								"value": "{{Date}}"
							},
							{
								"key": "TPP-Signature-Certificate",
								"type": "text",
								"value": "{{EncodedCert}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"BIC\": \"DEMOLULLXX1\",\r\n  \"accountAccess\": {\r\n    \"allAccounts\": false,\r\n    \"balances\": [\r\n      {\r\n        \"iban\": \"PO7612345987650123456789020\",\r\n        \"currency\": \"EUR\"\r\n      }\r\n    ],\r\n    \"accounts\": [\r\n      {\r\n        \"iban\": \"PO7612345987650123456789020\",\r\n        \"currency\": \"EUR\"\r\n      }\r\n    ],\r\n    \"transactions\": [\r\n      {\r\n        \"iban\": \"PO7612345987650123456789020\",\r\n        \"currency\": \"EUR\"\r\n      }\r\n        ]\r\n  },\r\n  \"recurringIndicator\": true,\r\n  \"frequencyPerDay\": 4,\r\n  \"validUntil\": \"2021-06-30\",\r\n  \"combinedServiceIndicator\": false,\r\n  \"trustedBeneficiaries\": true,\r\n  \"psuIdentity\": true,\r\n  \"revokePreviousPermissions\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/oneapi/v1/users/f5c50d40-0903-4aaa-8a7c-379a274ecdb4/permissions",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"users",
								"f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get transactions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "LH-Token-Information",
								"value": "{{permissionId}}",
								"type": "text"
							},
							{
								"key": "LH-USER-Id",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{Signature}}",
								"type": "text"
							},
							{
								"key": "Date",
								"value": "{{Date}}",
								"type": "text"
							},
							{
								"key": "TPP-Signature-Certificate",
								"value": "{{EncodedCert}}",
								"type": "text"
							},
							{
								"key": "LH-BIC-Provider",
								"value": "DEMOLULLXX1",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{host}}/oneapi/v1/accounts/20011/transactions?bookingStatus=both",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"accounts",
								"20011",
								"transactions"
							],
							"query": [
								{
									"key": "bookingStatus",
									"value": "both"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get balances",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "LH-Token-Information",
								"type": "text",
								"value": "{{permissionId}}"
							},
							{
								"key": "LH-USER-Id",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "Signature",
								"type": "text",
								"value": "{{Signature}}"
							},
							{
								"key": "Date",
								"type": "text",
								"value": "{{Date}}"
							},
							{
								"key": "TPP-Signature-Certificate",
								"type": "text",
								"value": "{{EncodedCert}}"
							},
							{
								"key": "LH-BIC-Provider",
								"type": "text",
								"value": "DEMOLULLXX1"
							}
						],
						"url": {
							"raw": "https://{{host}}/oneapi/v1/accounts/20011/balances",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"accounts",
								"20011",
								"balances"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PIS flow",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.globals.set(\"accessToken\", responseJson.access_token)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "OneAPI",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{host}}/api/oauth/token",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Providers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/oneapi/v1/providers",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.globals.set(\"paymentId\", responseJson.paymentId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Date",
								"type": "text",
								"value": "{{Date}}"
							},
							{
								"key": "Signature",
								"type": "text",
								"value": "{{Signature}}"
							},
							{
								"key": "x-request-id",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "TPP-Signature-Certificate",
								"type": "text",
								"value": "{{EncodedCert}}"
							},
							{
								"key": "Digest",
								"type": "text",
								"value": "{{Digest}}"
							},
							{
								"key": "LH-Token-Information",
								"type": "text",
								"value": "{{permissionId}}"
							},
							{
								"key": "LH-BIC-Provider",
								"type": "text",
								"value": "DEMOLULLXX1"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "127.0.0.1"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"originator\": {\r\n        \"debtorAccount\": {\r\n            \"iban\": \"FR7612345987650123456789015\",\r\n            \"currency\": \"EUR\"\r\n        },\r\n        \"debtorName\": \"JaneDoe\",\r\n        \"initiatingParty\": \"Myapplication\"\r\n    },\r\n    \"beneficiary\": {\r\n        \"creditorName\": \"SarahDoe\",\r\n        \"creditorAccount\": {\r\n            \"iban\": \"LU430101169718715111\",\r\n            \"currency\": \"EUR\"\r\n        }\r\n    },\r\n    \"paymentDetails\": {\r\n        \"creationDateTime\": \"2021-04-30T09:33:48.734Z\",\r\n        \"instructedAmount\": {\r\n            \"amount\": \"2\",\r\n            \"currency\": \"EUR\"\r\n        },\r\n        \"paymentTypeInformation\": {\r\n            \"categoryPurpose\": \"DVPM\"\r\n        },\r\n        \"requestedExecutionDate\": \"2021-05-01T22:00:00Z\",\r\n        \"endToEndIdentification\": \"a6358e361a4e4863a3cff814d42b8d24\",\r\n        \"instructionIdentification\": \"603d3de12e634333831763ae046c5e1e\",\r\n        \"remittanceInformation\": \"A payment comment\"\r\n    },\r\n    \"paymentProduct\": \"sepa-credit-transfers\"\r\n}"
						},
						"url": {
							"raw": "https://{{host}}/oneapi/v1/payments",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"eval(pm.environment.get('pmlib_code'))\r",
									"eval(pm.environment.get('signingCode'))\r",
									"\r",
									"const requestWithoutContentHeaders = \"x-request-id date\";\r",
									"\r",
									"const keyId = pm.environment.get(\"keyId\");\r",
									"const signature = getSignatureBaseOnRequest();\r",
									"const encryptedSignature = encryptSignature(signature.normalizedString);\r",
									"const signatureHeader = `keyId=\"${keyId}\",algorithm=\"rsa-sha256\",headers=\"${signature.headers}\",signature=\"${encryptedSignature}\"`;\r",
									"calculateDigest();\r",
									"console.log(`Signature header: ${signatureHeader}`);\r",
									"pm.globals.set(\"Signature\", signatureHeader);\r",
									"pm.globals.set(\"EncodedCert\",getCertificate(pm.environment.get(\"signingCert\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{accessToken}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Date",
								"type": "text",
								"value": "{{Date}}"
							},
							{
								"key": "Signature",
								"type": "text",
								"value": "{{Signature}}"
							},
							{
								"key": "x-request-id",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "TPP-Signature-Certificate",
								"type": "text",
								"value": "{{EncodedCert}}"
							},
							{
								"key": "LH-USER-Id",
								"type": "text",
								"value": "f5c50d40-0903-4aaa-8a7c-379a274ecdb4"
							},
							{
								"key": "LH-Token-Information",
								"type": "text",
								"value": "{{permissionId}}"
							},
							{
								"key": "LH-BIC-Provider",
								"type": "text",
								"value": "DEMOLULLLBG"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "127.0.0.1"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/oneapi/v1/payments/{{paymentId}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"oneapi",
								"v1",
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}