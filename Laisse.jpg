{
  "swagger" : "2.0",
  "info" : {
    "description" : "\nThe LUXHUB One Financial Services API provides a unified interface to access various Providers PSD2 APIs. The API is circumventing the details of PSD2 dedicated implementation of the providers, by establishing a common data model, security profiles and authorization flows. As such, consumers of the LUXHUB One API will be able to easily integrate various PSD2 API providers in a unified way in order to provide easy access for their cusotmers to account information and payment initiation services via PSD2 APIs.\n\n<b>Get Started</b>\n<li> Contact support at developer.luxhub.com to setup your development account, in Sandbox and/or Production mode. \n<li>You will have to provide a pair of eIDAS certificates - QWAC/QSEALC - to identify yourself to financial institutions, i.e. PSD2 API providers\n<p style=\"margin-left:20px\"><i>Note: the certtificates are mandatory for production access and might be required for some providers in sandbox access mode as well. The protocol for creating and exchanging these certificates is described in the get started page on LUXHUB Developer Portal.</i>\n<li>You will be asked to configure a redirect URL where the user of your application will be redirected after performing SCA with the financial institution.\n\n<b>API Authentication</b>\n<p>LUXHUB One supports Client credentials access token and API Key authorization. However API Key is deprecated, thus we recommend the usage of client credentials flow.</p>\n<p>\n  <li>\n    <b>Client Credentials</b>:  In order to access the different endpoints, a header \"Authorization\" containing the access token must be sent for each request.\n    <p style=\"margin-left:20px\">This is an example of the header: <code>Authorization: Bearer ACCESS_TOKEN</code></p>\n  </li>\n  <li><b>API Key (deprecated)</b>: In order to access the different endpoints, a header \"X-API-Key\" must be sent for each request with the API key that was assigned to you. \n  <p style=\"margin-left:20px\">This is an example of the header: <code>X-API-Key: YOUR_API_KEY_VALUE</code></p>\n  <li>All consumers are required to access the API via HTTPS - MTLS is in place for all endpoints; the certificate to be used is issued by LUXHUB Certification Authority.\n</p>\n<b>User Authorisation</b>\n<li>Users of consumer application will need to log in with their financial institutions -the provider- to give explicit consent for your application to access their banking data. In most cases, this will involve redirecting users to their financial institution's authorisation screen. The user is redirected back to the consumer application, on the URL that you have configured for your application when registering for One API - the consumer token (permission-id) will be used in a header for all the subsequent API calls.\n\n<li>For long-lived consent support - using the OAuth2 refresh_token grant, an attempt will be made to refresh the associated access token when requesting financial data with an expired access token.\n<br>\n",
    "version" : "1.0.4",
    "title" : "LUXHUB One",
    "contact" : {
      "name" : "LUXHUB",
      "url" : "https://www.luxhub.lu",
      "email" : "support@luxhub.lu"
    },
    "license" : {
      "name" : "Creative Commons Attribution 4.0 International Public License",
      "url" : "https://creativecommons.org/licenses/by/4.0/"
    }
  },
  "host" : "apis-sbx.luxhub.com",
  "basePath" : "/oneapi/v1",
  "tags" : [ {
    "name" : "Provider Service"
  }, {
    "name" : "Permissions Service"
  }, {
    "name" : "Account Information Service",
    "description" : "LUXHUB One API offers the following acount information services\n  * A list of available accounts or card account, including account details.\n  * Transaction history reports for a given account or card account including balances if applicable.\n  * Balances of a given account or card account.\nAll these are relative to the permissions (consent) authorized by the end user for the service consumer.\n"
  }, {
    "name" : "Payment Initiation Service",
    "description" : "The current version of LUXHUB One API offers payments initiation via below payment products:\n  * single SEPA, including instant, credit transfers with payment information in JSON format\n  \nFurther payment products will be added as the API will evolve.\n"
  }, {
    "name" : "Bulk Payments Initiation Service",
    "description" : "The current version of LUXHUB One API offers bulk payments initiation (pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments, pain.001-cross-border-credit-transfers, sepa-credit-transfers, instant-sepa-credit-transfers, target-2-payments, cross-border-credit-transfers) with payment information in XML/JSON format\n"
  } ],
  "schemes" : [ "https" ],
  "security" : [ {
    "OAuthImplicit" : [ "OneAPI" ]
  }, {
    "OAuthAccessCode" : [ "OneAPI" ]
  }, {
    "API Key" : [ ]
  } ],
  "paths" : {
    "/bulk-payments/{bulkPaymentId}/status" : {
      "get" : {
        "tags" : [ "Bulk Payments Initiation Service" ],
        "summary" : "Retrieves a bulk-payment status by identifier",
        "operationId" : "RHL_getBulkPaymentStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bulkPaymentId",
          "in" : "path",
          "description" : "Bulk payment identifier assigned by Provider",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "LH-USER-Id",
          "in" : "header",
          "description" : "TPP reference to user in UUID format",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "TPP-Redirect-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\", the consumer prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the consumer prefers not to be redirected for SCA. The provider will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the consumer/end user.\nIf the parameter is not used, the provider will choose the SCA approach to be applied depending on the SCA method chosen by the\nconsumer/end user.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "TPP-Redirect-URI",
          "in" : "header",
          "description" : "URI of the consumer, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Nok-Redirect-URI",
          "in" : "header",
          "description" : "If this URI is contained, the consumer is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Rejection-NoFunds-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\" then the consumer prefers a rejection of the payment initiation in case the provider is \nproviding an integrated confirmation of funds request an the result of this is that not sufficient \nfunds are available.\n\nIf it equals \"false\" then the consumer prefers that the provider is dealing with the payment initiation like \nin the providers online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BulkPaymentStatusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/payments/{paymentId}/status" : {
      "get" : {
        "tags" : [ "Payment Initiation Service" ],
        "summary" : "Retrieves a payment status by identifier",
        "operationId" : "RHL_getPaymentStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier assigned by Provider",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PaymentStatusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "501" : {
            "description" : "Endpoint not implemented by the provider",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/accounts/{accountId}/balances" : {
      "get" : {
        "tags" : [ "Account Information Service" ],
        "summary" : "Read balances list of an account",
        "description" : "Read balances list of a given account addressed by account resource identifier - please note the account resource identifier IS NOT the account IBAN or similar, but a technical ID",
        "operationId" : "RHL_getBalancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "This identification is denoting the addressed account. \nThe accountId is retrieved by using a \"Read Account List\" call. \nThe accountId is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given permission.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "LH-USER-Id",
          "in" : "header",
          "description" : "TPP reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "LH-Token-Information",
          "in" : "header",
          "description" : "This contains the permission Id returned by the post permission, which was performed prior to any request.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BalancesList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users/{userId}/permissions" : {
      "get" : {
        "tags" : [ "Permissions Service" ],
        "summary" : "Retrieves ALL permissions associated to a user, irrespective of Provider and/or status",
        "description" : "ALL permissions associated with a specific user will be returned. All details for each permission in the list are returned as well, including provider and/or permission status.",
        "operationId" : "RHL_listPermissions",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "TPP reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filter by permission status",
          "required" : false,
          "type" : "string",
          "default" : "valid",
          "enum" : [ "received", "rejected", "valid", "revokedByPsu", "expired", "terminatedByConsumer", "all" ]
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PermissionsList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Permissions Service" ],
        "summary" : "Creates a permission. A permission is ALWAYS identified by the triplet (consumer, user, provider), reffers to certin resources and it is having a clear lifecycle.",
        "description" : "When connecting a user, a permission needs to be created for accounts access. The user will be redirected to their choosen provider and will perform SCA - upon successful SCA with the provider, the permission will move to an authorized status. \nThis call returns the details of the permission, including the URL where the user will be redirected for permission authorization.\n\nLUXHUB One implements a detailed consent model similar to BG detailed one. In order to get a valid permission to access balances; transactions and accounts, the user must give prior consent for each of them. To achive that, this is the flow that has to be implemented: \n* The Consumer request*s* a first permission just to retrieve the list of accounts of the customer. In such a case, SCA is not mandatory to retrieve list of accounts (though it is used by some Providers to identify user as well as authenticate him so might be required even in this case).\n* A second request that will create the actual detailed permission based on the list of accounts and desired access approved by the user. If the Provider's IDP allows, the second SCA for detailed consent authorization might be skiped based on the existence of a*n* authentication session.\n\nThese are details of the implementation but concerning the SCA, each provider needs to be toroughly tested by the Consumer.",
        "operationId" : "RHL_createPermission",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "Tpp reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "TPP-Redirect-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\", the consumer prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the consumer prefers not to be redirected for SCA. The provider will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the consumer/end user.\nIf the parameter is not used, the provider will choose the SCA approach to be applied depending on the SCA method chosen by the\nconsumer/end user.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "TPP-Redirect-URI",
          "in" : "header",
          "description" : "URI of the consumer, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Nok-Redirect-URI",
          "in" : "header",
          "description" : "If this URI is contained, the consumer is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Rejection-NoFunds-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\" then the consumer prefers a rejection of the payment initiation in case the provider is \nproviding an integrated confirmation of funds request an the result of this is that not sufficient \nfunds are available.\n\nIf it equals \"false\" then the consumer prefers that the provider is dealing with the payment initiation like \nin the providers online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "authorizationRequest",
          "description" : "permission authorization request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PermissionRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The request has been created as a resource. The Provider must authenticate the end user.",
            "headers" : {
              "location" : {
                "type" : "string",
                "description" : "URI of the created (and updated if needed) Permission Account Authorization Request. \n"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PermissionResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/accounts/{accountId}/transactions" : {
      "get" : {
        "tags" : [ "Account Information Service" ],
        "summary" : "Read transaction list of an account",
        "description" : "Retrieve a list of transactions of a given account addressed by \"accountId\", depending on the steering parameter \n\"bookingStatus\".\n\nFor a given account, additional parameters can be used, e.g. the attributes \"dateFrom\" and \"dateTo\".",
        "operationId" : "RHL_getTransactionList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "This identification is denoting the addressed account. \nThe accountId is retrieved by using a \"Read Account List\" call. \nThe accountId is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given permission.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "LH-USER-Id",
          "in" : "header",
          "description" : "TPP reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-Token-Information",
          "in" : "header",
          "description" : "This contains the permission Id returned by the post permission, which was performed prior to any request.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the Provider.\n",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given. \n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the Provider.\n",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "entryReferenceFrom",
          "in" : "query",
          "description" : "This data attribute is indicating that the Consumer is in favour to get all transactions after \nthe transaction with identification entryReferenceFrom alternatively to the above defined period. \nThis is a implementation of a delta access. \nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the Provider \nif a delta report is supported.\n\nOptional if supported by API provider.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bookingStatus",
          "in" : "query",
          "description" : "Permitted codes are \n  * \"booked\",\n  * \"pending\" and \n  * \"both\"\n\"booked\" shall be supported by the Provider.\nTo support the \"pending\" and \"both\" feature is optional for the Provider, \nAn error code will be returned if not supported by the Provider.\n",
          "required" : true,
          "type" : "string",
          "enum" : [ "booked", "pending", "both" ]
        }, {
          "name" : "deltaList",
          "in" : "query",
          "description" : "This data attribute is indicating that the Consumer is in favour to get all transactions after the last report access for this end user on the addressed account. This is another implementation of a delta access-report.\nThis delta indicator might be rejected by the Provider if this function is not supported.\nOptional if supported by API provider",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "withBalance",
          "in" : "query",
          "description" : "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the end user in the related permission and available by the Provider. \nThis parameter might be ignored by the Provider. \n",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "302" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "URL for the sca to get extended scope for transactions older than 90 days"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/payments" : {
      "post" : {
        "tags" : [ "Payment Initiation Service" ],
        "summary" : "Create a payment.",
        "operationId" : "RHL_postPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "LH-USER-Id",
          "in" : "header",
          "description" : "TPP reference to user in UUID format",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "TPP-Redirect-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\", the consumer prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the consumer prefers not to be redirected for SCA. The provider will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the consumer/end user.\nIf the parameter is not used, the provider will choose the SCA approach to be applied depending on the SCA method chosen by the\nconsumer/end user.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "TPP-Redirect-URI",
          "in" : "header",
          "description" : "URI of the consumer, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Nok-Redirect-URI",
          "in" : "header",
          "description" : "If this URI is contained, the consumer is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Rejection-NoFunds-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\" then the consumer prefers a rejection of the payment initiation in case the provider is \nproviding an integrated confirmation of funds request an the result of this is that not sufficient \nfunds are available.\n\nIf it equals \"false\" then the consumer prefers that the provider is dealing with the payment initiation like \nin the providers online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payment initiation request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/bulk-payments" : {
      "post" : {
        "tags" : [ "Bulk Payments Initiation Service" ],
        "summary" : "Creates a bulk payment.",
        "operationId" : "RHL_postBulkPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "LH-USER-Id",
          "in" : "header",
          "description" : "TPP reference to user in UUID format",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "TPP-Redirect-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\", the consumer prefers a redirect over an embedded SCA approach.\nIf it equals \"false\", the consumer prefers not to be redirected for SCA. The provider will then choose between the Embedded or the Decoupled\nSCA approach, depending on the choice of the SCA procedure by the consumer/end user.\nIf the parameter is not used, the provider will choose the SCA approach to be applied depending on the SCA method chosen by the\nconsumer/end user.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "TPP-Redirect-URI",
          "in" : "header",
          "description" : "URI of the consumer, where the transaction flow shall be redirected to after a Redirect.\n\nMandated for the Redirect SCA Approach, specifically \nwhen TPP-Redirect-Preferred equals \"true\".\nIt is recommended to always use this header field.\n\n**Remark for Future:** \nThis field might be changed to mandatory in the next version of the specification.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Nok-Redirect-URI",
          "in" : "header",
          "description" : "If this URI is contained, the consumer is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case\nof a negative result of the redirect SCA method. This might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "format" : "uri"
        }, {
          "name" : "TPP-Rejection-NoFunds-Preferred",
          "in" : "header",
          "description" : "If it equals \"true\" then the consumer prefers a rejection of the payment initiation in case the provider is \nproviding an integrated confirmation of funds request an the result of this is that not sufficient \nfunds are available.\n\nIf it equals \"false\" then the consumer prefers that the provider is dealing with the payment initiation like \nin the providers online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the provider.\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Bulk Payment initiation request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BulkPaymentRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/bulk-payments/{bulkPaymentId}" : {
      "get" : {
        "tags" : [ "Bulk Payments Initiation Service" ],
        "summary" : "Retrieves bulk payment by identifier.",
        "operationId" : "RHL_getBulkPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bulkPaymentId",
          "in" : "path",
          "description" : "Bulk payment identifier assigned by Provider",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BulkPaymentDetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "501" : {
            "description" : "Endpoint not implemented by the provider",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Bulk Payments Initiation Service" ],
        "summary" : "Cancel bulk payment by identifier.",
        "operationId" : "RHL_deleteBulkPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bulkPaymentId",
          "in" : "path",
          "description" : "Bulk payment identifier assigned by Provider",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/DeleteBulkPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "501" : {
            "description" : "Endpoint not implemented by the provider",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/providers" : {
      "get" : {
        "tags" : [ "Provider Service" ],
        "summary" : "Returns a list of providers and their associated information.",
        "description" : "Retrieves provider list. All the providers available for the respective consumer are returned - this means only providers to which the consumer is registered by LUXHUB.",
        "operationId" : "RHL_getProviderList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "info",
          "in" : "query",
          "description" : "Allows to restrict presented information<br>if not specified the value is 'all' by default.",
          "required" : false,
          "type" : "string",
          "enum" : [ "all", "none", "media", "health" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProvidersList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/accounts" : {
      "get" : {
        "tags" : [ "Account Information Service" ],
        "summary" : "Read Account List",
        "description" : "Read the available payment accounts identifiers depending on the permission granted. It is assumed that a permission of the user to this access is already given and stored in LUXHUB One and/or Provider system.  The list of accounts depends on the user identifier and the stored permission addressed by permissionId,  respectively the access token granted by the provider as a result of user's authorization. \nReturns all accounts of the user, to which an account access has been granted to through the /permissions endpoint by the end user.  In addition, relevant information about the accounts and hyperlinks to corresponding account information resources are provided if a related permission has been already  granted.\n\nNote: the /permissions endpoint optionally offers to grant an access on all available payment accounts of the end user.  In this case, this endpoint will deliver the information about all available payment accounts  of the end user with the respective Provider.",
        "operationId" : "RHL_getAccountList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "LH-USER-Id",
          "in" : "header",
          "description" : "TPP reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "LH-Token-Information",
          "in" : "header",
          "description" : "This contains the permission Id returned by the post permission, which was performed prior to any request.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AccountList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users/{userId}/permissions/{permissionId}" : {
      "get" : {
        "tags" : [ "Permissions Service" ],
        "summary" : "Retrieves permission by identtifier.",
        "description" : "All permission's details are retrieved.",
        "operationId" : "RHL_readPermission",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "TPP reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "permissionId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PermissionResource"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Permissions Service" ],
        "summary" : "Deletes a permission by its identifier.",
        "description" : "Physically deletes a permission in the LUXHUB One system.",
        "operationId" : "RHL_removePermission",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "TPP reference to user in UUID format",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "permissionId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/payments/{paymentId}" : {
      "get" : {
        "tags" : [ "Payment Initiation Service" ],
        "summary" : "Retrieves payment by identifier.",
        "operationId" : "RHL_getPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier assigned by Provider",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PaymentResource"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "No Content",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              }
            }
          },
          "501" : {
            "description" : "Endpoint not implemented by the provider",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Payment Initiation Service" ],
        "summary" : "Delete a payment by identifier.",
        "operationId" : "RHL_deletePayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Payment identifier assigned by Provider",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "LH-BIC-Provider",
          "in" : "header",
          "description" : "SWIFT Bank Identifier Code",
          "required" : true,
          "type" : "string",
          "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$"
        }, {
          "name" : "X-Request-ID",
          "in" : "header",
          "description" : "ID of the request, unique to the call, as determined by the initiating party.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "Signature",
          "in" : "header",
          "description" : "A signature of the request by the TPP on application level.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "TPP-Signature-Certificate",
          "in" : "header",
          "description" : "The certificate used for signing the request, in base64 encoding. \nMust be contained if a signature is contained.\n",
          "required" : true,
          "type" : "string",
          "format" : "byte"
        }, {
          "name" : "Date",
          "in" : "header",
          "description" : "The date in format EEE, dd MMM YYYY HH:mm:ss GMT.\nImportant! Please note that there should not be a gap of more than 3 minutes between the request time and the Date value.",
          "required" : true,
          "type" : "string",
          "pattern" : "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-9]{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT)$"
        }, {
          "name" : "Digest",
          "in" : "header",
          "description" : "The value of this header is the result of applying the digest algorithm (LUXHUB One supports only SHA-256) to the request payload and encoding the result. Check Get Started for more details.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-IP-Address",
          "in" : "header",
          "description" : "IP Address between end user and API Consumer.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$"
        }, {
          "name" : "PSU-IP-Port",
          "in" : "header",
          "description" : "IP Port between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Referer",
          "in" : "header",
          "description" : "\"Referer\" header field sent by the end user�s terminal when connecting to the consumer.\nNotice that an initial typo in RFC 1945 specifies that \"referer\" (incorrect spelling) is to be used. The correct spelling \"referrer\" can be used but might not be understood.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Geo-Location",
          "in" : "header",
          "description" : "The forwarded Geo Location of the corresponding http request between end user and API Consumer if available.\n",
          "required" : false,
          "type" : "string",
          "pattern" : "GEO:-?[0-9]{1,2}\\.[0-9]{6}[;,]{1}-?[0-9]{1,3}\\.[0-9]{6}"
        }, {
          "name" : "PSU-Accept",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Charset",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Encoding",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Accept-Language",
          "in" : "header",
          "description" : "The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between end user and Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-User-Agent",
          "in" : "header",
          "description" : "The forwarded Agent header field of the HTTP request between end user and API Consumer, if available.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "PSU-Http-Method",
          "in" : "header",
          "description" : "HTTP method used at the end user - API Consumer interface, if available.\nValid values are:\n* GET\n* POST\n* PUT\n* PATCH\n* DELETE\n",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE" ]
        }, {
          "name" : "PSU-Device-ID",
          "in" : "header",
          "description" : "UUID (Universally Unique Identifier) for a device, which is used by the end user, if available.\nUUID identifies either a device or a device dependant application installation.\nIn case of an installation identification this ID needs to be unaltered until removal from device.\n",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "ID of the request, unique to the call, as determined by the initiating party."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/DeletePaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "422" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "412" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "501" : {
            "description" : "Endpoint not implemented by the provider",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "Not found",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "408" : {
            "description" : "Request Timeout",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "409" : {
            "description" : "Conflict",
            "headers" : {
              "X-Request-ID" : {
                "type" : "string",
                "description" : "Correlation header to be set in a request and retrieved in the relevant response"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of the created resource."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "API Key" : {
      "description" : "API Key",
      "type" : "apiKey",
      "name" : "X-API-KEY",
      "in" : "header"
    },
    "OAuthImplicit" : {
      "description" : "OAuth",
      "type" : "oauth2",
      "authorizationUrl" : "https://apis.luxhub.com/api/oauth/authorize",
      "flow" : "implicit",
      "scopes" : {
        "OneAPI" : ""
      }
    },
    "OAuthAccessCode" : {
      "description" : "OAuth",
      "type" : "oauth2",
      "authorizationUrl" : "https://apis.luxhub.com/api/oauth/authorize",
      "tokenUrl" : "https://apis.luxhub.com/api/oauth/token",
      "flow" : "accessCode",
      "scopes" : {
        "OneAPI" : ""
      }
    }
  },
  "definitions" : {
    "PeriodicPaymentInformation" : {
      "type" : "object",
      "required" : [ "startDate" ],
      "properties" : {
        "endDate" : {
          "$ref" : "#/definitions/EndDate"
        },
        "executionRule" : {
          "$ref" : "#/definitions/ExecutionRule"
        },
        "frequency" : {
          "$ref" : "#/definitions/FrequencyCode"
        },
        "startDate" : {
          "$ref" : "#/definitions/StartDate"
        }
      },
      "description" : "Information needed in order to create a periodic payment. The consumer can initiate this recurring credit transfer with a start date, frequency and an optional end date. A periodic payment can be a SEPA Credit Transfer payment product. "
    },
    "PermissionRequest" : {
      "type" : "object",
      "required" : [ "BIC" ],
      "properties" : {
        "BIC" : {
          "$ref" : "#/definitions/BIC"
        },
        "accountAccess" : {
          "$ref" : "#/definitions/AccountAccess"
        },
        "combinedServiceIndicator" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\". - NOT CURRENTLY SUPPORTED\n"
        },
        "externalReference" : {
          "type" : "string",
          "example" : "Permission20131126",
          "description" : "An optional reference to identify the permission. This reference will be returned in the callback url after the authorization of the permission.",
          "maxLength" : 35,
          "pattern" : "^([a-zA-Z0-9 /\\-?:().,\\']{1,35})$"
        },
        "frequencyPerDay" : {
          "type" : "integer",
          "example" : 4,
          "description" : "This field indicates the requested maximum frequency for an access without end user's involvement per day.For a one-off access, this attribute is set to 1."
        },
        "psuIdentity" : {
          "type" : "boolean",
          "description" : "Indicator that access to the end user's identity, first name and last name, was granted or not to the Consumer by the end user.\n- true: the access was granted\n- false: the access was not granted\n"
        },
        "recurringIndicator" : {
          "type" : "boolean",
          "description" : "true, if the permission is for recurring access to the account data. false, if the permission is for one access to the account data."
        },
        "revokePreviousPermissions" : {
          "type" : "boolean",
          "description" : "Indicates if permissions already created for given end user must be revoked. Default value is true.\n- true: to revoke previous permissions\n- false: to keep previous permissions valid\n",
          "default" : true
        },
        "trustedBeneficiaries" : {
          "type" : "boolean",
          "description" : "Indicator that access to the trusted beneficiaries list was granted or not to the AISP by the end user\n- true: the access was granted\n- false: the access was not granted\n"
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date",
          "example" : "2020-12-31",
          "description" : "Date until which the permission is valid."
        }
      },
      "description" : "Permission authorization resource for accounts information"
    },
    "ServiceLevelCode" : {
      "type" : "string",
      "description" : "ISO20022: Agreement under which or rules under which the transaction should be processed. Specifies a pre-agreed service or level of service between the parties, as published in an external service level code list.\nAPI: Only \"SEPA\" (SEPA Credit Transfer) value is allowed\n",
      "example" : "SEPA",
      "enum" : [ "SEPA" ]
    },
    "Email" : {
      "type" : "string",
      "maxLength" : 70,
      "description" : "Email.",
      "example" : "sample@test.local"
    },
    "Address" : {
      "type" : "object",
      "required" : [ "country" ],
      "properties" : {
        "buildingNumber" : {
          "type" : "string",
          "maxLength" : 4
        },
        "city" : {
          "type" : "string",
          "maxLength" : 17
        },
        "country" : {
          "$ref" : "#/definitions/CountryCode"
        },
        "postalCode" : {
          "type" : "string",
          "maxLength" : 7
        },
        "street" : {
          "type" : "string",
          "maxLength" : 37
        }
      },
      "example" : {
        "buildingNumber" : "89",
        "city" : "Paris",
        "country" : "FR",
        "postalCode" : "75000",
        "street" : "rue blue"
      }
    },
    "Iban" : {
      "type" : "string",
      "pattern" : "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
      "description" : "ISO20022: International Bank Account Number (IBAN) - identification used internationally \nby financial institutions to uniquely identify the account of a customer.           \nFurther specifications of the format and content of the IBAN can be found in the \nstandard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" \nversion 1997-10-01, or later revisions.\n",
      "example" : "PT50000201231234567890154"
    },
    "ExecutionRule" : {
      "type" : "string",
      "description" : "Execution date shifting rule for standing orders\nThis data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday. \nThe payment is then executed either the \"preceding\" or \"following\" working day.\nProvider might reject the request due to the communicated value, if rules in Online-Banking are not supporting \nthis execution rule.\n- FWNG: following\n- PREC: preceding\n",
      "example" : "FWNG",
      "enum" : [ "FWNG", "PREC" ]
    },
    "usage" : {
      "type" : "string",
      "description" : "Specifies whether the accessed account is a personal or corporate account\n",
      "example" : "personal",
      "enum" : [ "personal", "corporate" ]
    },
    "BalanceResource" : {
      "type" : "object",
      "required" : [ "balanceAmount", "balanceType" ],
      "properties" : {
        "balanceAmount" : {
          "description" : "Amount indicating the current balance for the selected account.",
          "$ref" : "#/definitions/AmountType"
        },
        "balanceType" : {
          "$ref" : "#/definitions/BalanceStatus"
        },
        "lastChangeDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This data element might be used to indicate e.g. with the expected or booked balance that no action is known \non the account, which is not yet booked.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Label of the balance",
          "maxLength" : 70
        }
      },
      "description" : "Structure of an account balance",
      "example" : {
        "balanceAmount" : {
          "amount" : "123.45",
          "currency" : "EUR"
        },
        "balanceType" : "CLBD"
      }
    },
    "TransactionStatus" : {
      "type" : "string",
      "description" : "Type of Transaction\n- BOOK: (ISO20022 ClosingBooked) Accounted transaction\n- PDNG: (ISO20022 Expected) Instant Balance Transaction\n- INFO: Payment transactions where the transaction amount is not known in advance. Example: a reservation on the account when a payment is made upfront at an unmanned gas station. The actual amount will be deducted from the account after fueling, when the transaction is completed. Transactions that have an INFO booking status only affect the informative balance and don't affect other balances.",
      "example" : "BOOK",
      "enum" : [ "BOOK", "PDNG", "INFO", "OTHR" ]
    },
    "AdditionalProviderInformation" : {
      "type" : "object",
      "description" : "Contains a list of operation names together with a swagger operationId to indicate how the provider handle some of the fields present in the request payload.\nFor example when initiating a payment, requestedExecutionDate is not supported by some providers, so if it is provided, it will be ignored and not sent to the provider.",
      "example" : {
        "PIS-standard-credit-transfers" : {
          "RHL_postPayment" : {
            "debtorAccount" : "mandatory",
            "requestedExecutionDate" : "mandatory"
          }
        }
      },
      "additionalProperties" : {
        "$ref" : "#/definitions/OperationInformation"
      }
    },
    "BalancesList" : {
      "type" : "object",
      "required" : [ "balances" ],
      "properties" : {
        "balances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BalanceResource"
          }
        }
      },
      "description" : "List of balances.\n"
    },
    "CurrencyCode" : {
      "type" : "string",
      "pattern" : "^[A-Z]{3,3}$",
      "description" : "Specifies the currency of the amount or of the account. \nA code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". \n",
      "example" : "EUR"
    },
    "StartDate" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "The first applicable day of execution. For providers supporting only date, it will be send with YYYY-MM-DD format\n",
      "example" : "2020-09-01T17:16:23.000Z"
    },
    "BulkPaymentStatusResponse" : {
      "properties" : {
        "paymentInitiationStatusResponse_xml" : {
          "$ref" : "#/definitions/paymentInitiationStatusResponse_xml"
        },
        "paymentStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        }
      },
      "description" : ""
    },
    "FrequencyCode" : {
      "type" : "string",
      "description" : "Frequency rule for standing orders.\nThe following codes from the \"EventFrequency7Code\" of ISO 20022 are supported.\n- DAIL: Daily\n- WEEK: Weekly\n- TOWK: EveryTwoWeeks\n- MNTH: Monthly\n- TOMN: EveryTwoMonths\n- QUTR: Quarterly\n- SEMI: SemiAnnual\n- YEAR: Annual\nHowever, each Provider might restrict these values into a subset if needed. \n",
      "example" : "MNTH",
      "enum" : [ "DAIL", "WEEK", "TOWK", "MNTH", "TOMN", "QUTR", "SEMI", "YEAR" ]
    },
    "Msisdn" : {
      "type" : "string",
      "maxLength" : 35,
      "description" : "Mobile phone number.",
      "example" : "+49 170 1234567"
    },
    "Bban" : {
      "type" : "string",
      "pattern" : "[a-zA-Z0-9]{1,30}",
      "description" : "Basic Bank Account Number (BBAN) Identifier\nThis data element can be used in the body of the Permission Request\nMessage for retrieving Account access Permission from this Account. This\ndata elements is used for payment Accounts which have no IBAN.\nISO20022: Basic Bank Account Number (BBAN).         \nIdentifier used nationally by financial institutions, i.e., in individual countries, \ngenerally as part of a National Account Numbering Scheme(s), \nwhich uniquely identifies the account of a customer.\n",
      "example" : "BARC12345612345678"
    },
    "AuthorizationUri" : {
      "type" : "string",
      "format" : "url",
      "description" : "Provider URL where the end-user will be redirected to perform SCA for authorization. The Consumer needs to use redirect URL assigned to him by LUXHUB as redirect in subsequent /authorize call to Provider. This will also be included here.\n",
      "x-example" : "http://provider.com/authorize?redirect_uri=http%3A%2F%luxhub.com%3Aconsumer_id"
    },
    "Originator" : {
      "type" : "object",
      "properties" : {
        "debtorAccount" : {
          "$ref" : "#/definitions/PaymentAccountIdentification"
        },
        "debtorName" : {
          "type" : "string",
          "example" : "Mr Dupont",
          "description" : "Debtor name\n",
          "maxLength" : 70
        },
        "initiatingParty" : {
          "type" : "string",
          "example" : "Paypal",
          "description" : "Party initiating the payment. This can be either the debtor or a party initiating the payment on behalf of the debtor. Merchant name or person's name depending on the use case.\n",
          "maxLength" : 70
        }
      },
      "description" : "Generic originator model struture"
    },
    "MediaResource" : {
      "type" : "object",
      "required" : [ "base64", "class", "format" ],
      "properties" : {
        "base64" : {
          "type" : "string",
          "format" : "byte",
          "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
        },
        "class" : {
          "type" : "string",
          "enum" : [ "logo", "icon" ]
        },
        "format" : {
          "type" : "string",
          "enum" : [ "png", "jpeg" ]
        }
      }
    },
    "CallbackURI" : {
      "type" : "string",
      "format" : "url",
      "description" : "URL where the end-user will be redirected to after finishing the login flow. This URL has to match against the one(s) registered by respective consumer during onboarding.",
      "x-example" : "http://localhost:9005/redirect"
    },
    "PaymentStatus" : {
      "type" : "string",
      "description" : "The transaction status is filled with codes of the ISO 20022 data table:\n- 'ACCC': 'AcceptedSettlementCompleted' -\n  Settlement on the creditor's account has been completed.\n- 'ACCP': 'AcceptedCustomerProfile' - \n  Preceding check of technical validation was successful. \n  Customer profile check was also successful.\n- 'ACSC': 'AcceptedSettlementCompleted' - \n  Settlement on the debtor�s account has been completed.\n  \n  **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed. \n  \n  **Warning:** this status is provided for transaction status reasons, not for financial information. \n  It can only be used after bilateral agreement.\n- 'ACSP': 'AcceptedSettlementInProcess' - \n  All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\n- 'ACTC': 'AcceptedTechnicalValidation' - \n  Authentication and syntactical and semantical validation are successful.\n- 'ACWC': 'AcceptedWithChange' - \n  Instruction is accepted but a change will be made, such as date or remittance not sent.\n- 'ACWP': 'AcceptedWithoutPosting' - \n  Payment instruction included in the credit transfer is accepted without being posted to the creditor customer�s account.\n- 'RCVD': 'Received' - \n  Payment initiation has been received by the receiving agent.\n- 'PDNG': 'Pending' - \n  Payment initiation or individual transaction included in the payment initiation is pending. \n  Further checks and status update will be performed.\n- 'RJCT': 'Rejected' - \n  Payment initiation or individual transaction included in the payment initiation has been rejected.\n- 'CANC': 'Cancelled'\n  Payment initiation has been cancelled before execution\n  Remark: This code is accepted as new code by ISO20022.\n- 'ACFC': 'AcceptedFundsChecked' -\n  Preceding check of technical validation and customer profile was successful and an automatic funds check was positive .\n  Remark: This code is accepted as new code by ISO20022.\n- 'PATC': 'PartiallyAcceptedTechnical'\n  Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.\n  Remark: This code is accepted as new code by ISO20022.\n- 'PART': 'PartiallyAccepted' -\n  A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.\n  Remark: This code may be used only in case of bulk payments. It is only used in a situation where all mandated authorisations have been applied, but some payments have been rejected.\n  \n",
      "enum" : [ "ACCC", "ACCP", "ACSC", "ACSP", "ACTC", "ACWC", "ACWP", "RCVD", "PDNG", "RJCT", "CANC", "ACFC", "PATC", "PART" ]
    },
    "AccountDetails" : {
      "type" : "object",
      "required" : [ "accountId", "resourceId" ],
      "properties" : {
        "accountId" : {
          "$ref" : "#/definitions/AccountIdentification"
        },
        "additionalInformation" : {
          "type" : "array",
          "description" : "An array of other properties for the account.",
          "items" : {
            "type" : "object",
            "description" : "The validation error descriptor.",
            "properties" : {
              "name" : {
                "type" : "string",
                "example" : "psdPaymentAccount"
              },
              "value" : {
                "type" : "string",
                "example" : "true"
              }
            },
            "required" : [ "name", "value" ]
          }
        },
        "bicFi" : {
          "$ref" : "#/definitions/bicFi"
        },
        "name" : {
          "type" : "string",
          "example" : "My cash account",
          "description" : "Label of the end user account\nIn case of a delayed debit card transaction set, the name shall specify the holder name and the imputation date\n",
          "maxLength" : 70
        },
        "resourceId" : {
          "$ref" : "#/definitions/ResourceId"
        },
        "type" : {
          "type" : "string",
          "example" : "CACC",
          "description" : "Specifies the type of the account\n- CACC:  Account used to post debits and credits when no specific account has been nominated.\n- CARD:  Account used for credit card payments.\n- CASH:  Account used for the payment of cash.\n- CHAR:  Account used for charges if different from the account for payment.\n- CISH:  Account used for payment of income if different from the current cash account\n- COMM:  Account used for commission if different from the account for payment.\n- CPAC:  Account used to post settlement debit and credit entries on behalf of a designated Clearing Participant.\n- LLSV:  Account used for savings with special interest and withdrawal terms.  \n- LOAN:  Account used for loans.\n- MGLD:  Account used for a marginal lending facility.\n- MOMA:  Account used for money markets if different from the cash account.\n- NREX:  Account used for non-resident external.\n- ODFT:  Account is used for overdrafts.\n- ONDP:  Account used for overnight deposits.\n- OTHR:  Account not otherwise specified. \n- SACC:  Account used to post debit and credit entries, as a result of transactions cleared and settled through a specific clearing and settlement system.\n- SLRY:  Accounts used for salary payments.\n- SVGS:  Account used for savings.\n- TAXE:  Account used for taxes if different from the account for payment.\n- TRAN:  A transacting account is the most basic type of bank account that you can get. The main difference between transaction and cheque accounts is that you usually do not get a cheque book with your transacting account and neither are you offered an overdraft facility.\n- TRAS:  Account used for trading if different from the current cash account.\n"
        },
        "usage" : {
          "$ref" : "#/definitions/usage"
        }
      },
      "description" : "End user account that is made available to the Consumer\n"
    },
    "LocalInstrumentCode" : {
      "type" : "string",
      "description" : "ISO20022: User community specific instrument. \nUsage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.\nAPI: \"INST\" value is to be used in order to ask for an SEPA instant Payment (SCTInst). \nFor International payments, this field may be valued with one of the ISO20022 external code to specify with payment instrument should be used by the creditor's bank. \n",
      "example" : "INST"
    },
    "BulkPaymentProduct" : {
      "type" : "string",
      "description" : "It indicates the type of bulk payment.\n",
      "enum" : [ "pain.001-cross-border-credit-transfers", "pain.001-sepa-credit-transfers", "pain.001-instant-sepa-credit-transfers", "pain.001-target-2-payments" ]
    },
    "PaymentStatusResponse" : {
      "properties" : {
        "paymentStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        }
      },
      "description" : ""
    },
    "BalanceStatus" : {
      "type" : "string",
      "description" : "Type of balance\n- CLBD: (ISO20022 ClosingBooked) Accounting Balance\n- XPCD: (ISO20022 Expected) Instant Balance\n- CLAV: (ISO20022 ClosingAvailable)\n- FWAV: (ISO20022 ForwardAvailable)\n- ITAV: (ISO20022 InterimAvailable)\n- ITBD: (ISO20022 InterimBooked)\n- OPBD: (ISO20022 OpeningBooked)\n- INFO: (ISO20022 Information)\n- PRCD: (ISO20022 PreviouslyClosedBooked)\n- OPAV: (ISO20022 OpeningAvailable)\n- VALU: Value-date balance\n- NONI: Non invoiced\n- AUTH: Authorised\n- OTHR: Other Balance\n",
      "example" : "CLBD",
      "enum" : [ "CLBD", "XPCD", "CLAV", "FWAV", "ITAV", "ITBD", "OPBD", "INFO", "PRCD", "OPAV", "VALU", "NONI", "AUTH", "OTHR" ]
    },
    "PaymentTypeInformation" : {
      "type" : "object",
      "properties" : {
        "categoryPurpose" : {
          "$ref" : "#/definitions/CategoryPurposeCode"
        },
        "instructionPriority" : {
          "$ref" : "#/definitions/PriorityCode"
        },
        "localInstrument" : {
          "$ref" : "#/definitions/LocalInstrumentCode"
        },
        "serviceLevel" : {
          "$ref" : "#/definitions/ServiceLevelCode"
        }
      },
      "description" : "ISO20022: Set of elements used to further specify the type of transaction.\n",
      "example" : {
        "categoryPurpose" : "DVPM",
        "localInstrument" : "INST",
        "serviceLevel" : "SEPA"
      }
    },
    "EndToEndIdentification" : {
      "type" : "string",
      "maxLength" : 36,
      "pattern" : "^([a-zA-Z0-9 /\\-?:\\()\\.,']{1,36})$",
      "description" : "Unique identification assigned by the initiating party to unumbiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\n This reference will be returned in the callback url after the authorization of the payment.",
      "example" : "Invoice20131126"
    },
    "DeleteBulkPaymentResponse" : {
      "properties" : {
        "authorization_uri" : {
          "$ref" : "#/definitions/AuthorizationUri"
        },
        "bulkPaymentStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        }
      },
      "description" : "Payment cancellation authorization response. Only if the provider requires payment cancellation authorization."
    },
    "HealthStatus" : {
      "type" : "object",
      "required" : [ "feature", "lastTried", "status" ],
      "properties" : {
        "feature" : {
          "$ref" : "#/definitions/ProfileFeatures"
        },
        "lastTried" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "OK", "NOK" ]
        }
      }
    },
    "TransactionList" : {
      "type" : "object",
      "properties" : {
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      },
      "description" : "Array of transaction details"
    },
    "paymentInitiationStatusResponse_xml" : {
      "type" : "string",
      "description" : "includes the respective response returned by the provider based on the payment product sent in request"
    },
    "PermissionResource" : {
      "type" : "object",
      "required" : [ "accountAccess", "consentModel", "frequencyPerDay", "lastActionDate", "permissionId", "permissionStatus", "recurringIndicator", "validUntil" ],
      "properties" : {
        "BIC" : {
          "$ref" : "#/definitions/BIC"
        },
        "accountAccess" : {
          "$ref" : "#/definitions/AccountAccess"
        },
        "callback_uri" : {
          "$ref" : "#/definitions/CallbackURI"
        },
        "combinedServiceIndicator" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\". - NOT CURRENTLY SUPPORTED\n"
        },
        "consentModel" : {
          "$ref" : "#/definitions/ConsentModel"
        },
        "externalReference" : {
          "type" : "string",
          "example" : "Permission20131126",
          "description" : "An optional reference to identify the permission. This reference will be returned in the callback url after the authorization of the permission.",
          "maxLength" : 35,
          "pattern" : "^([a-zA-Z0-9 /\\-?:().,\\']{1,35})$"
        },
        "frequencyPerDay" : {
          "type" : "integer",
          "example" : 4,
          "description" : "This field indicates the requested maximum frequency for an access without end user's involvement per day.\nFor a one-off access, this attribute is set to 1."
        },
        "lastActionDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-07-21T17:32:28Z",
          "description" : " This date is containing the date of the last action on the permission object having an impact on the status."
        },
        "permissionId" : {
          "$ref" : "#/definitions/PermissionId"
        },
        "permissionStatus" : {
          "$ref" : "#/definitions/PermissionStatus"
        },
        "psuIdentity" : {
          "type" : "boolean",
          "description" : "Indicator that access to the end user's identity, first name and last name, was granted or not to the Consumer by the end user.\n- true: the access was granted\n- false: the access was not granted\n"
        },
        "recurringIndicator" : {
          "type" : "boolean",
          "example" : false,
          "description" : "true, if the permission is for recurring access to the account data. false, if the permission is for one access to the account data."
        },
        "trustedBeneficiaries" : {
          "type" : "boolean",
          "description" : "Indicator that access to the trusted beneficiaries list was granted or not to the AISP by the end user\n- true: the access was granted\n- false: the access was not granted\n"
        },
        "userId" : {
          "$ref" : "#/definitions/UserId"
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date",
          "example" : "2020-12-31",
          "description" : "Date until which the permission is valid."
        }
      },
      "description" : "Body of the JSON response for a successfull get permissions request."
    },
    "ProvidersList" : {
      "type" : "array",
      "description" : "List of Providers supported by LUXHUB Platform\n",
      "items" : {
        "$ref" : "#/definitions/ProviderResourceShortDetail"
      }
    },
    "InitiatePayment_XML_request" : {
      "type" : "object",
      "properties" : {
        "paymentInitiationCrossBorder_pain.001" : {
          "type" : "string",
          "description" : "A pain.001 structure corresponding to the cross-border schema"
        },
        "paymentInitiationSctInst_pain.001" : {
          "type" : "string",
          "description" : "A pain.001 structure corresponding to the SCT schema"
        },
        "paymentInitiationSct_pain.001" : {
          "type" : "string",
          "description" : "A pain.001 structure corresponding to the SCT INST schema"
        },
        "paymentInitiationTarget2_pain.001" : {
          "type" : "string",
          "description" : "A pain.001 structure corresponding to the target-2 schema"
        }
      }
    },
    "PaymentAmountType" : {
      "type" : "object",
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "description" : "ISO20022: Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. Only a value higher than 0 is allowed.\n",
          "pattern" : "^0\\.[1-9]+[0-9]|0\\.0{0,2}[1-9]|[1-9][0-9]{0,12}(?:\\.[0-9]{0,3}){0,1}$"
        },
        "currency" : {
          "$ref" : "#/definitions/CurrencyCode"
        }
      },
      "description" : "Structure aiming to embed the amount and the currency to be used.\n",
      "example" : {
        "amount" : "12.258",
        "currency" : "EUR"
      }
    },
    "RemittanceInformation" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "string"
        },
        "structured" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "The structured information."
          }
        },
        "unstructured" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "The unstructured information. <br> <h2>Accepted characters</h2>\n <b>Note</b> : The providers might support or not support these characters, in case of the latter, the error message from the provider is forwarded. \n\n a b c d e f g h i j k l m n o p q r s t u v w x y z\n\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\n\n0 1 2 3 4 5 6 7 8 9\n\n/ - ? : ( ) . , ' +\n\nSpace\n<br>"
          }
        }
      },
      "description" : "Relevant information to the transaction. ISO20022: Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system?",
      "example" : {
        "additionalInformation" : "some additional information",
        "structured" : [ "structured value 1", "structured value 2" ],
        "unstructured" : [ "unstructured value 1", "unstructured value 2" ]
      }
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "status", "transactionAmount" ],
      "properties" : {
        "bookingDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Booking date of the transaction on the account\nIf the transaction is not yet booked, this field contains a scheduled booking date.\n"
        },
        "creditorAccount" : {
          "$ref" : "#/definitions/PaymentAccountIdentification"
        },
        "creditorName" : {
          "$ref" : "#/definitions/CreditorName"
        },
        "debtorAccount" : {
          "$ref" : "#/definitions/PaymentAccountIdentification"
        },
        "debtorName" : {
          "$ref" : "#/definitions/DebtorName"
        },
        "endToEndIdentification" : {
          "$ref" : "#/definitions/EndToEndIdentification"
        },
        "entryReference" : {
          "type" : "string",
          "description" : "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. \nThe same identification as for example used within camt.05x messages.\n",
          "maxLength" : 35
        },
        "remittanceInformation" : {
          "$ref" : "#/definitions/RemittanceInformation"
        },
        "resourceId" : {
          "$ref" : "#/definitions/ResourceId"
        },
        "status" : {
          "$ref" : "#/definitions/TransactionStatus"
        },
        "transactionAmount" : {
          "$ref" : "#/definitions/AmountType"
        },
        "type" : {
          "$ref" : "#/definitions/TransactionType"
        },
        "valueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The Date at which assets become available to the account owner in case of a credit."
        }
      },
      "description" : "Transaction information"
    },
    "AmountType" : {
      "type" : "object",
      "required" : [ "amount", "currency" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "pattern" : "^\\-{0,1}[0-9]{1,14}(\\.[0-9]{0,5}){0,1}$"
        },
        "currency" : {
          "$ref" : "#/definitions/CurrencyCode"
        }
      },
      "description" : "Structure aiming to embed the amount and the currency to be used.\n",
      "example" : {
        "amount" : "12.25",
        "currency" : "EUR"
      }
    },
    "PaymentRequestOriginator" : {
      "type" : "object",
      "required" : [ "debtorName", "initiatingParty" ],
      "properties" : {
        "debtorAccount" : {
          "$ref" : "#/definitions/PaymentAccountIdentification"
        },
        "debtorName" : {
          "type" : "string",
          "example" : "Mr Dupont",
          "description" : "Debtor name.\nBNP Fortis Belgium accepts only 40 characters. In this case, only the first 40 characters will be sent.\n",
          "maxLength" : 70
        },
        "initiatingParty" : {
          "type" : "string",
          "example" : "Paypal",
          "description" : "Party initiating the payment. This can be either the debtor or a party initiating the payment on behalf of the debtor. Merchant name or person's name depending on the use case.\nBNP Fortis Belgium accepts only 40 characters. In this case, only the first 40 characters will be sent.\n",
          "maxLength" : 70
        }
      },
      "description" : "Generic originator model struture"
    },
    "PaymentDetails" : {
      "type" : "object",
      "required" : [ "instructedAmount" ],
      "properties" : {
        "chargeBearer" : {
          "type" : "string",
          "description" : "It indicates who is going to pay the fee.\n",
          "enum" : [ "SLEV", "SHAR", "DEBT", "CRED" ]
        },
        "creationDateTime" : {
          "$ref" : "#/definitions/CreationDateTime"
        },
        "endToEndIdentification" : {
          "$ref" : "#/definitions/EndToEndIdentification"
        },
        "instructedAmount" : {
          "$ref" : "#/definitions/PaymentAmountType"
        },
        "instructionIdentification" : {
          "type" : "string",
          "example" : "PMNT34444334",
          "description" : "ISO20022: Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\n",
          "pattern" : "^([a-zA-Z0-9 /\\-?:\\()\\.,']{1,35})$"
        },
        "paymentInformationId" : {
          "type" : "string",
          "example" : "MyPmtInfId",
          "description" : "ISO20022 : Reference assigned by a sending party to unambiguously   identify the payment information block within the message.\n",
          "pattern" : "^([a-zA-Z0-9 /\\-?:\\()\\.,']{1,35})$"
        },
        "paymentTypeInformation" : {
          "$ref" : "#/definitions/PaymentTypeInformation"
        },
        "periodicInformation" : {
          "$ref" : "#/definitions/PeriodicPaymentInformation"
        },
        "remittanceInformation" : {
          "type" : "string",
          "description" : "Information that must specify the Billing Account Numbers (BANs) paid; invoices paid and the amount to be applied to each BAN and invoice.",
          "maxLength" : 140
        },
        "remittanceInformationType" : {
          "type" : "string",
          "description" : "Type of remittance information\n",
          "enum" : [ "unstructured" ]
        },
        "requestedExecutionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Execution date of the payment resource.\n"
        }
      },
      "description" : "Generic payment details model structure"
    },
    "RegionalEntity" : {
      "type" : "object",
      "required" : [ "name", "region" ],
      "properties" : {
        "BIC" : {
          "$ref" : "#/definitions/BIC"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the regional entity"
        },
        "region" : {
          "type" : "string",
          "description" : "Region of the entity"
        }
      }
    },
    "MessageCategory" : {
      "type" : "string",
      "description" : "Category of the consumer message category",
      "enum" : [ "ERROR", "WARNING" ]
    },
    "BulkPaymentRequest" : {
      "type" : "object",
      "properties" : {
        "bulkPaymentInitiationXml" : {
          "$ref" : "#/definitions/InitiatePayment_XML_request"
        }
      }
    },
    "MessageCode2XX" : {
      "type" : "string",
      "description" : "Message codes for HTTP Error codes 2XX.",
      "enum" : [ "WARNING" ]
    },
    "OperationIdValue" : {
      "type" : "string",
      "enum" : [ "mandatory", "optional", "not_supported", "supported" ]
    },
    "TransactionType" : {
      "type" : "string",
      "description" : "Accounting flow of the amount\n- CRDT: Credit type amount\n- DBIT: Debit type amount\n- OTHR: Other\n",
      "example" : "CRDT"
    },
    "CategoryPurposeCode" : {
      "type" : "string",
      "description" : "ISO20022: Specifies the high level purpose of the instruction based on a set of pre-defined categories. This is used by the initiating party to provide information concerning the processing of the payment. It is likely to trigger special processing by any of the agents involved in the payment chain.\nAPI: The following values are allowed:\n<table border=\"1\"><tr> \n<th>CodeName</th><th>Name</th><th>Definition</th>\n</tr><tr>\n  <td>CASH</td><td>CashManagementTransfer</td><td>Transaction is a general cash management instruction.</td>\n</tr><tr>\n  <td>CORT</td><td>TradeSettlementPayment</td><td>Transaction is related to settlement of a trade, eg a foreign exchange deal or a securities transaction.</td>\n</tr><tr>\n  <td>DVPM</td><td>DeliverAgainstPayment</td><td>Code used to pre-advise the account servicer of a forthcoming deliver against payment instruction.</td>  \n</tr><tr>\n  <td>INTC</td><td>IntraCompanyPayment</td><td>Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.</td>  \n</tr><tr>\n  <td>TREA</td><td>TreasuryPayment</td><td>Transaction is related to treasury operations.  E.g. financial contract settlement.</td>  \n</tr></table> \n",
      "example" : "CASH",
      "enum" : [ "CASH", "CORT", "DVPM", "INTC", "TREA" ]
    },
    "PriorityCode" : {
      "type" : "string",
      "description" : "ISO20022: Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.\nAPI: This field is useless for SCTInst and thus should be ignored.\n",
      "example" : "NORM",
      "enum" : [ "HIGH", "NORM" ]
    },
    "bicFi" : {
      "type" : "string",
      "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
      "description" : "ISO20022: Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362 \n\"Banking - Banking telecommunication messages - Business identification code (BIC)\".\n",
      "example" : "SCOEFR21XXX"
    },
    "AccountIdentification" : {
      "type" : "object",
      "properties" : {
        "bban" : {
          "$ref" : "#/definitions/Bban"
        },
        "currency" : {
          "$ref" : "#/definitions/CurrencyCode"
        },
        "email" : {
          "$ref" : "#/definitions/Email"
        },
        "iban" : {
          "$ref" : "#/definitions/Iban"
        },
        "maskedPan" : {
          "$ref" : "#/definitions/MaskedPan"
        },
        "msisdn" : {
          "$ref" : "#/definitions/Msisdn"
        },
        "pan" : {
          "$ref" : "#/definitions/Pan"
        },
        "sortAccountNumber" : {
          "$ref" : "#/definitions/SortAccountNumber"
        }
      },
      "description" : "Unique and unambiguous identification for the account between the account owner and the account servicer."
    },
    "AccountList" : {
      "type" : "object",
      "required" : [ "accounts" ],
      "properties" : {
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountDetails"
          }
        }
      },
      "description" : "List of accounts with details.\n"
    },
    "PaymentResponse" : {
      "type" : "object",
      "required" : [ "paymentId" ],
      "properties" : {
        "authorization_uri" : {
          "$ref" : "#/definitions/AuthorizationUri"
        },
        "message" : {
          "description" : "Additional information received from the provider when initiating the payment."
        },
        "paymentId" : {
          "$ref" : "#/definitions/PaymentId"
        },
        "paymentStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        },
        "transactionFees" : {
          "description" : "Amount indicating the fees of the transactions.",
          "$ref" : "#/definitions/AmountType"
        }
      },
      "description" : "Generic payment response model structure. AuthorizationUri will be present if an action is required by the sender (SCA to autorize the payment)."
    },
    "PermissionsList" : {
      "type" : "object",
      "required" : [ "permissions" ],
      "properties" : {
        "permissions" : {
          "type" : "array",
          "description" : "List of end user's permissions that are made available to the API Consumer.\n",
          "items" : {
            "$ref" : "#/definitions/PermissionResource"
          }
        }
      },
      "description" : ""
    },
    "PaymentProduct" : {
      "type" : "string",
      "description" : "It indicates the type of payment.\n",
      "enum" : [ "sepa-credit-transfers", "instant-sepa-credit-transfers", "target-2-payments", "cross-border-credit-transfers", "p2p-transfers", "ewallet-payments", "domestic", "domestic-scheduled" ]
    },
    "ConsentModel" : {
      "type" : "string",
      "description" : "Type of the supported permission model\nNote: In the near future LUXHUB One will support only detailed consent model, no matter which consent model is used by the provider and this information will be removed. Therefore, it is advised to gradually treat all providers as detailed.",
      "enum" : [ "GLOBAL", "DETAILED" ]
    },
    "SortAccountNumber" : {
      "type" : "string",
      "pattern" : "^[0-9]{6}[0-9]{8}$",
      "description" : "Sort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer..\n",
      "example" : "64393578518400"
    },
    "OperationInformation" : {
      "type" : "object",
      "additionalProperties" : {
        "$ref" : "#/definitions/OperationIdInformation"
      }
    },
    "MaskedPan" : {
      "type" : "string",
      "maxLength" : 35,
      "description" : "Masked Primary Account Number\n",
      "example" : "123456xxxxxx1234"
    },
    "ProfileFeatures" : {
      "type" : "string",
      "enum" : [ "ACCOUNT_DETAILS", "ACCOUNTS", "BALANCES", "TRANSACTIONS", "PAYMENT" ]
    },
    "CountryCode" : {
      "type" : "string",
      "pattern" : "[A-Z]{2}",
      "description" : "ISO 3166 ALPHA2 country code",
      "example" : "SE"
    },
    "DebtorName" : {
      "type" : "string",
      "maxLength" : 70,
      "description" : "Debtor Name",
      "example" : "Debtor Name"
    },
    "PaymentAccountIdentification" : {
      "type" : "object",
      "properties" : {
        "bban" : {
          "$ref" : "#/definitions/Bban"
        },
        "currency" : {
          "$ref" : "#/definitions/CurrencyCode"
        },
        "email" : {
          "$ref" : "#/definitions/Email"
        },
        "iban" : {
          "$ref" : "#/definitions/Iban"
        },
        "pan" : {
          "$ref" : "#/definitions/Pan"
        },
        "sortAccountNumber" : {
          "$ref" : "#/definitions/SortAccountNumber"
        }
      },
      "description" : "Unique and unambiguous identification for the account between the account owner and the account servicer."
    },
    "BIC" : {
      "type" : "string",
      "pattern" : "^([a-zA-Z]{4}[a-zA-Z]{2}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?)$",
      "description" : "SWIFT Bank Identifier Code",
      "example" : "BANKCCTT001"
    },
    "PermissionStatus" : {
      "type" : "string",
      "description" : "This is the overall lifecycle status of the permission.\nValid values are:\n  - 'received': The permission data have been received and are technically correct. \n    The data is not authorised yet.\n  - 'rejected': The permission data have been rejected e.g. since no successful authorisation has taken place.\n  - 'valid': The permission is accepted and valid for GET account data calls and others as specified in the permission object.\n  - 'revokedByPsu': The permission has been revoked by the end user towards the Provider.\n  - 'expired': The permission expired.\n  - 'terminatedByConsumer': The corresponding Consumer has terminated the permission by applying the DELETE method to the permission resource.\n",
      "enum" : [ "received", "rejected", "valid", "revokedByPsu", "expired", "terminatedByConsumer" ]
    },
    "Message2XX" : {
      "type" : "object",
      "required" : [ "category", "code" ],
      "properties" : {
        "category" : {
          "$ref" : "#/definitions/MessageCategory"
        },
        "code" : {
          "$ref" : "#/definitions/MessageCode2XX"
        },
        "text" : {
          "$ref" : "#/definitions/MessageText"
        }
      }
    },
    "DeletePaymentResponse" : {
      "properties" : {
        "authorization_uri" : {
          "$ref" : "#/definitions/AuthorizationUri"
        }
      },
      "description" : "Payment cancellation authorization response. Only if the provider requires payment cancellation authorization."
    },
    "PaymentRequestDetails" : {
      "type" : "object",
      "required" : [ "creationDateTime", "endToEndIdentification", "instructedAmount", "instructionIdentification", "paymentTypeInformation" ],
      "properties" : {
        "chargeBearer" : {
          "type" : "string",
          "description" : "ISO20022: Specifies which party/parties will bear the charges associated with the processing of the payment transaction.\nThe following values are allowed: \nSLEV - Charges are to be applied following the rules agreed in the service level and/or scheme.\nSHAR (shared) - The sender pays the bank charge and the recipient/ receiver pays the charges of all other intermediary and/or recipient banks.\nDEBT (debtor) - The sender pays the bank charge and the charges of all other intermediary and/or recipient banks.\nCRED (creditor) - Where the beneficiary supports all costs.",
          "enum" : [ "SLEV", "SHAR", "DEBT", "CRED" ]
        },
        "creationDateTime" : {
          "$ref" : "#/definitions/CreationDateTime"
        },
        "endToEndIdentification" : {
          "$ref" : "#/definitions/EndToEndIdentification"
        },
        "instructedAmount" : {
          "$ref" : "#/definitions/PaymentAmountType"
        },
        "instructionIdentification" : {
          "type" : "string",
          "description" : "ISO20022: Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\n\nAPI: Unique identification shared between the PISP and the Provider. \n",
          "pattern" : "^([a-zA-Z0-9 /\\-?:\\()\\.,']{1,35})$"
        },
        "paymentTypeInformation" : {
          "$ref" : "#/definitions/PaymentTypeInformation"
        },
        "periodicInformation" : {
          "$ref" : "#/definitions/PeriodicPaymentInformation"
        },
        "remittanceInformation" : {
          "type" : "string",
          "description" : "Information that must specify the Billing Account Numbers (BANs) paid; invoices paid and the amount to be applied to each BAN and invoice.\n  <br> <h4>Accepted characters</h4> \n\n a b c d e f g h i j k l m n o p q r s t u v w x y z\n\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\n\n0 1 2 3 4 5 6 7 8 9\n\n/ - ? : ( ) . , ' +\n\nSpace\n<br> <b>Note</b> : The providers might support or not support these characters, in case of the latter, the error message from the provider is forwarded.",
          "maxLength" : 140
        },
        "remittanceInformationType" : {
          "type" : "string",
          "description" : "Type of remittance information\n",
          "enum" : [ "unstructured" ]
        },
        "requestedExecutionDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-09-01T17:16:23.000Z",
          "description" : "This field indicates the date at which the debtor account should be debited.\n"
        }
      },
      "description" : "Generic payment details model structure"
    },
    "OperationIdInformation" : {
      "type" : "object",
      "additionalProperties" : {
        "$ref" : "#/definitions/OperationIdValue"
      }
    },
    "PaymentId" : {
      "type" : "string",
      "description" : "API: Identifier assigned by the Provider for further use of the created resource through API calls\n",
      "example" : "6004924001000001"
    },
    "CreditorName" : {
      "type" : "string",
      "maxLength" : 70,
      "description" : "Creditor Name",
      "example" : "Creditor Name"
    },
    "PaymentResource" : {
      "type" : "object",
      "required" : [ "beneficiary", "originator", "paymentDetails", "paymentProduct" ],
      "properties" : {
        "beneficiary" : {
          "$ref" : "#/definitions/Beneficiary"
        },
        "originator" : {
          "$ref" : "#/definitions/Originator"
        },
        "paymentDetails" : {
          "$ref" : "#/definitions/PaymentDetails"
        },
        "paymentProduct" : {
          "$ref" : "#/definitions/PaymentProduct"
        },
        "paymentStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        }
      },
      "description" : "Generic payment request model structure"
    },
    "BulkPaymentDetails" : {
      "properties" : {
        "getPaymentInformation_JSON" : {
          "$ref" : "#/definitions/PaymentInformationJSON"
        },
        "getPaymentInformation_XML" : {
          "$ref" : "#/definitions/InitiatePayment_XML_request"
        }
      },
      "description" : ""
    },
    "MessageText" : {
      "type" : "string",
      "maxLength" : 512,
      "description" : "Additional explaining text to the consumer."
    },
    "PermissionResponse" : {
      "required" : [ "BIC", "permissionId", "status" ],
      "properties" : {
        "BIC" : {
          "$ref" : "#/definitions/BIC"
        },
        "authorization_uri" : {
          "$ref" : "#/definitions/AuthorizationUri"
        },
        "permissionId" : {
          "$ref" : "#/definitions/PermissionId"
        },
        "status" : {
          "$ref" : "#/definitions/PermissionStatus"
        }
      },
      "description" : "Permission authorization response for accounts information"
    },
    "EndDate" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "The last applicable day of execution for a given standing order.\nIf not provided or not supported by Provider, the standing order is considered as endless. For providers supporting only date, it will be send with YYYY-MM-DD format.\n",
      "example" : "2020-09-01T17:16:23.000Z"
    },
    "PaymentInformationJSON" : {
      "type" : "object",
      "properties" : {
        "bulkPaymentStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        },
        "originator" : {
          "$ref" : "#/definitions/Originator"
        },
        "paymentDetails" : {
          "$ref" : "#/definitions/PaymentDetails"
        },
        "paymentProduct" : {
          "$ref" : "#/definitions/BulkPaymentProduct"
        }
      },
      "description" : "Generic bulk payment response model structure"
    },
    "RegionalEntities" : {
      "type" : "array",
      "description" : "List of the different regional entities available for the provider. Use the regional entity bic code in order to switch to the different regions.",
      "items" : {
        "$ref" : "#/definitions/RegionalEntity"
      }
    },
    "CreationDateTime" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "ISO20022: Date and time at which a (group of) payment instruction(s) was created by the instructing party.\n",
      "example" : "2018-03-31T13:25:22.527+02:00"
    },
    "PaymentRequest" : {
      "type" : "object",
      "required" : [ "beneficiary", "originator", "paymentDetails", "paymentProduct" ],
      "properties" : {
        "beneficiary" : {
          "$ref" : "#/definitions/Beneficiary"
        },
        "originator" : {
          "$ref" : "#/definitions/PaymentRequestOriginator"
        },
        "paymentDetails" : {
          "$ref" : "#/definitions/PaymentRequestDetails"
        },
        "paymentProduct" : {
          "$ref" : "#/definitions/PaymentProduct"
        }
      },
      "description" : "Generic payment request model structure"
    },
    "ResourceId" : {
      "type" : "string",
      "description" : "API: Identifier assigned by the Provider for further use of the created resource through API calls\n",
      "example" : "6004924001000001"
    },
    "UserId" : {
      "type" : "string",
      "format" : "uuid",
      "description" : "UUIDv1 of user in Consumer system",
      "x-example" : "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
    },
    "AccountAccess" : {
      "type" : "object",
      "properties" : {
        "accounts" : {
          "type" : "array",
          "description" : "Is asking for detailed account information. \n\nIf the array is empty, the Consumer is asking for an accessible account list. \nThis may be restricted in a end user/Provider authorization dialogue.\nIf the array is empty, also the arrays for balances or transactions shall be empty, if used.\n",
          "items" : {
            "$ref" : "#/definitions/AccountIdentification"
          }
        },
        "allAccounts" : {
          "type" : "boolean",
          "description" : "If true, all the accounts can be retrieved.\n\nUsed for the GLOBAL permission model and the initial step of the DETAILED oned.\n"
        },
        "balances" : {
          "type" : "array",
          "description" : "Is asking for balances of the addressed accounts.\n\nIf the array is empty, the Consumer is asking for the balances of all accessible account lists. \nThis may be restricted in a end user/Provider authorization dialogue.\nIf the array is empty, also the arrays for accounts or transactions shall be empty, if used.\n",
          "items" : {
            "$ref" : "#/definitions/AccountIdentification"
          }
        },
        "transactions" : {
          "type" : "array",
          "description" : "Is asking for transactions of the addressed accounts. \n\nIf the array is empty, the Consumer is asking for the transactions of all accessible account lists. \nThis may be restricted in a end user/Provider authorization dialogue.\nIf the array is empty, also the arrays for accounts or balances shall be empty, if used.\n",
          "items" : {
            "$ref" : "#/definitions/AccountIdentification"
          }
        }
      },
      "description" : "Requested access services for a permission.\n"
    },
    "ErrorModel" : {
      "type" : "object",
      "required" : [ "correlation", "detail", "status" ],
      "properties" : {
        "correlation" : {
          "type" : "string",
          "description" : "Correlation header set by LUXHUB firewall that can be used to identify each request.\n"
        },
        "detail" : {
          "type" : "string",
          "description" : "A human-readable explanation specific to this occurrence of the problem.",
          "maxLength" : 255
        },
        "instance" : {
          "type" : "string",
          "example" : "/mylhorg/v1/register",
          "description" : "A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced\n",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 400,
          "description" : "The HTTP status code [RFC7231, Section6](https://tools.ietf.org/html/rfc7231#section-6) generated by the origin server for this occurrence of the problem.\n"
        }
      },
      "description" : "Generic error model structure",
      "example" : {
        "correlation" : "Id-6a27d05c6517b0ffed3c82d3",
        "detail" : "Failed to create organization",
        "instance" : "/mylhorg/v1/register",
        "status" : 500
      }
    },
    "Pan" : {
      "type" : "string",
      "maxLength" : 35,
      "description" : "Primary Account Number according to ISO/IEC 7812.\n",
      "example" : "5409050000000000"
    },
    "PermissionId" : {
      "type" : "string",
      "format" : "uuid",
      "description" : "UUIDv1 of permission in LUXHUB platform",
      "x-example" : "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"
    },
    "Beneficiary" : {
      "type" : "object",
      "required" : [ "creditorAccount", "creditorName" ],
      "properties" : {
        "creditorAccount" : {
          "$ref" : "#/definitions/PaymentAccountIdentification"
        },
        "creditorAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "creditorAgent" : {
          "$ref" : "#/definitions/bicFi"
        },
        "creditorName" : {
          "type" : "string",
          "example" : "Mr Toto",
          "description" : "Creditor name.\nBNP Fortis Belgium accepts only 40 characters. In this case, only the first 40 characters will be sent or retrieved.\n",
          "maxLength" : 70
        }
      },
      "description" : "Generic beneficiary model structure"
    },
    "ProviderResourceShortDetail" : {
      "type" : "object",
      "required" : [ "BIC", "name" ],
      "properties" : {
        "BIC" : {
          "$ref" : "#/definitions/BIC"
        },
        "additionalInformation" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AdditionalProviderInformation"
          }
        },
        "consentModel" : {
          "$ref" : "#/definitions/ConsentModel"
        },
        "health" : {
          "type" : "array",
          "description" : "For future usage",
          "items" : {
            "$ref" : "#/definitions/HealthStatus"
          }
        },
        "media" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MediaResource"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Provider name."
        },
        "regionalEntities" : {
          "$ref" : "#/definitions/RegionalEntities"
        }
      }
    }
  }
}